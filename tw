#!/usr/bin/env ruby

require 'colorize'

# You need to alter this into your twitter account name(do not add @ mark)
USER="keisuganodev" 

def to_map(list, hash={})
    list.each{ |k, v| hash[k] = v }
    hash
end

def help(cmd, option="help")
    if cmd.keys.include?(option) || cmd.size == 0
        puts
        puts "tw  [l=?] ...   show the time line. You have to input number in ? "
        puts "                (? is number of records to show)"
        puts "tw  [p]   ...   post a tweet. (Once you type this, interactive"
        puts "                input required for actual tweet" 
        puts "tw  [whoami]    show your profile "
        puts "tw [wer][kw]    show followers   "
        puts "tw [wer] rand   show followers randomly"
        puts "tw [wing][kw]   show followings   "
        puts "tw [wing] rand  show followings randomly  "
        puts
    end
    cmd
end

cmd = help to_map(ARGV.map{|arg| arg.split('=') })

def max_number(cmd, option, i=3)
    (cmd[option] ||= 3).to_i 
end

def _system(x, ret=false)
    output = `#{x}`
    if ret
        return output
    else
        puts output.green
    end
end

def disp_whoami(cmd, option="whoami")
    if cmd.keys.include?(option)
        _system "t whoami"
    end
end

def timeline(user, index, lines=[])
    output       = `t timeline #{user}`
    output_lines = output.split("@#{user}")
    index = index == 0 ? 3 : index
    output_lines[1..index].each do |line|
        puts "@#{user.green} #{line.strip}" if line
        puts "tweet retrieval failure:  #{user.cyan}#{output.red}" if !lines
        links = line.split(" ").select{|t| t.start_with?("http")}
        lines.push links if line && links.size > 0
    end if output_lines.size > 0 
    lines.flatten.uniq
end

def disp_timeline(cmd, user, option="l")
    if cmd.keys.include?(option)
        timeline user, max_number(cmd, option)
    end
end

def puts_ret(follower)
    puts follower.green
    follower
end

def get_stdin(msg="")
    print "#{msg}" 
    input = $stdin.gets.chomp.strip
    abort if input == "q" 
    input
end

def get_followings(cmd, res=[], option="wing")
    get_followers(cmd, res, option)
end

def get_followers(cmd, res=[], option="wer", rand="rand")
    if cmd.keys.include?(option)
        search_term = cmd.keys.select{|k| k != option }[0]
        followers = _system("t follo#{option}s", true).split(" ")

        followers.each do |follower|
            res.push puts_ret(follower) if follower.start_with?(search_term)
        end if search_term != rand

        (0..5).each do |x|
          res.push puts_ret(followers[Random.rand(followers.size)])
        end if search_term == rand

        abort "Not Found" if res.size == 0
        maxnum = get_stdin("[Maximum Number]") 
        res.each do |follower|
            links = timeline(follower, (maxnum.to_i ||= 3))
            if get_stdin("[o: open links q:quit]") == "o"
                links.each {|l| system("open #{l}")}  
            end
        end
    end
end

def get_input()
    print "> "
    $stdin.gets.chomp
end

def collect_message(msg="")
    abort "tweet cancelled" if msg.include?(":exit")
    msg.include?(";") ? msg : collect_message("#{msg} \n#{get_input}")
end

def post_into_timeline(cmd, user, option="p")
    if cmd.keys.include?(option)
        puts "[type :exit to cancel the tweet]"
        output       = `t update "#{collect_message.gsub(';','')}"`
        p output
    end
end

disp_timeline      cmd, USER
post_into_timeline cmd, USER
disp_whoami        cmd
get_followers      cmd
get_followings     cmd
